
<div class="entry-edit">
    <div class="entry-edit-head">
        <h4 class="icon-head head-edit-form fieldset-legend">
            <?php echo Mage::helper('dls_blog')->__('Taxonomies') ?>
        </h4>
    </div>
    <fieldset id="grop_fields">
        <input type="hidden" name="taxonomy_ids" id="filter_taxonomies" value="<?php echo $this->getIdsString() ?>">
        <div id="filter-taxonomies" class="tree"></div>
    </fieldset>
</div>
<?php if ($this->getRootNode() && $this->getRootNode()->hasChildren()): ?>
    <script type="text/javascript">
        Ext.EventManager.onDocumentReady(function () {
            var taxonomyLoader = new Ext.tree.TreeLoader({
                dataUrl: '<?php echo $this->getLoadTreeUrl() ?>'
            });
            taxonomyLoader.createNode = function (config) {
                config.uiProvider = Ext.tree.CheckboxNodeUI;
                var node;
                if (config.children && !config.children.length) {
                    delete(config.children);
                    node = new Ext.tree.AsyncTreeNode(config);
                } else {
                    node = new Ext.tree.TreeNode(config);
                }
                return node;
            };
            taxonomyLoader.on("beforeload", function (treeLoader, node) {
                treeLoader.baseParams.taxonomy = node.attributes.id;
            });

            taxonomyLoader.on("load", function (treeLoader, node, config) {
                varienWindowOnload();
            });
            var tree = new Ext.tree.TreePanel('filter-taxonomies', {
                animate: true,
                loader: taxonomyLoader,
                enableDD: false,
                containerScroll: true,
                rootUIProvider: Ext.tree.CheckboxNodeUI,
                selModel: new Ext.tree.CheckNodeMultiSelectionModel(),
                rootVisible: '<?php echo $this->getRootNode()->getIsVisible() ?>'
            });
            tree.on('check', function (node) {
                if (node.attributes.checked) {
                    taxonomyAdd(node.id);
                } else {
                    taxonomyRemove(node.id);
                }
                varienElementMethods.setHasChanges(node.getUI().checkbox);
            }, tree);
            var root = new Ext.tree.TreeNode({
                text: '<?php echo $this->jsQuoteEscape($this->getRootNode()->getName()) ?>',
                draggable: false,
                checked: '<?php echo $this->getRootNode()->getChecked() ?>',
                id: '<?php echo $this->getRootNode()->getId() ?>',
                disabled: <?php echo ($this->getRootNode()->getDisabled() ? 'true' : 'false') ?>,
                uiProvider: Ext.tree.CheckboxNodeUI
            });
            tree.setRootNode(root);
            bildTaxonomyTree(root, <?php echo $this->getTreeJson() ?>);
            tree.addListener('click', taxonomyClick.createDelegate(this));
            tree.render();
            root.expand();
        });
        function bildTaxonomyTree(parent, config) {
            if (!config) {
                return null;
            }
            if (parent && config && config.length) {
                for (var i = 0; i < config.length; i++) {
                    config[i].uiProvider = Ext.tree.CheckboxNodeUI;
                    var node;
                    var _node = Object.clone(config[i]);
                    if (_node.children && !_node.children.length) {
                        delete(_node.children);
                        node = new Ext.tree.AsyncTreeNode(_node);

                    } else {
                        node = new Ext.tree.TreeNode(config[i]);
                    }
                    parent.appendChild(node);
                    node.loader = node.getOwnerTree().loader;
                    if (config[i].children) {
                        bildTaxonomyTree(node, config[i].children);
                    }
                }
            }
        }
        function taxonomyClick(node, e) {
            if (node.disabled) {
                return;
            }
            node.getUI().check(!node.getUI().checked());
            varienElementMethods.setHasChanges(Event.element(e), e);
        }
        ;
        function taxonomyAdd(id) {
            var ids = $('filter_taxonomies').value.split(',');
            ids.push(id);
            $('filter_taxonomies').value = ids.join(',');
        }
        function taxonomyRemove(id) {
            var ids = $('filter_taxonomies').value.split(',');
            while (-1 != ids.indexOf(id)) {
                ids.splice(ids.indexOf(id), 1);
            }
            $('filter_taxonomies').value = ids.join(',');
        }
    </script>
<?php endif; ?>
