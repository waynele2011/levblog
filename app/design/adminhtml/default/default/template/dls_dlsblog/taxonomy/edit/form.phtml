
<div class="content-header">
    <h3 class="icon-head head-categories">
        <?php echo $this->escapeHtml($this->getHeader()) . ($this->getTaxonomyId() ? ' (' . Mage::helper('dls_dlsblog')->__('ID: %s', $this->getTaxonomyId()) . ')' : '') ?>
    </h3>
    <p class="content-buttons form-buttons">
        <?php echo $this->getResetButtonHtml() ?>
        <?php if ($this->getTaxonomyId()): ?>
            <?php echo $this->getDeleteButtonHtml() ?>
        <?php endif; ?>
        <?php echo $this->getAdditionalButtonsHtml(); ?>
        <?php echo $this->getSaveButtonHtml() ?>
    </p>
</div>
<?php echo $this->getTabsHtml() ?>
<iframe name="iframeSave" style="display:none; width:100%;" src="<?php echo $this->getJsUrl() ?>blank.html"></iframe>
<form target="iframeSave" id="taxonomy_edit_form" action="<?php echo $this->getSaveUrl() ?>" method="post" enctype="multipart/form-data">
    <div class="no-display">
        <input type="hidden" name="isIframe" value="1" />
        <input name="form_key" type="hidden" value="<?php echo $this->getFormKey() ?>" />
        <input type="hidden" name="active_tab_id" id="active_tab_id" value="" />
        <input type="hidden" name="taxonomy_blogsets" id="in_taxonomy_blogsets" value="" />
    </div>
    <div id="taxonomy_tab_content"></div>
</form>
<script type="text/javascript">
//<![CDATA[
    taxonomyForm = new varienForm('taxonomy_edit_form');
    taxonomyForm.submit = function (url) {
        this.errorSections = $H({});
        this.canShowError = true;
        this.submitUrl = url;
        if (this.validator && this.validator.validate()) {
            if (this.validationUrl) {
                this._validate();
            } else {
                if (this.isSubmitted) {
                    return false;
                }
                this.isSubmitted = true;
                this._submit();
            }
            displayLoadingMask();
            return true;
        }
        return false;
    };
    taxonomyForm.refreshPath = function () {
        taxonomyId = this.getTaxonomyId();
        if (!taxonomyId) {
            return false;
        }
        var refreshPathSuccess = function (transport) {
            if (transport.responseText.isJSON()) {
                response = transport.responseText.evalJSON()
                if (response.error) {
                    alert(response.message);
                } else {
                    if (taxonomyForm.getTaxonomyId() == response['id']) {
                        taxonomyForm.setTaxonomyPath(response['path']);
                    }
                }
            }
        };
        new Ajax.Request(
                '<?php echo $this->getRefreshPathUrl() ?>',
                {
                    method: 'POST',
                    evalScripts: true,
                    onSuccess: refreshPathSuccess
                }
        );
    };

    taxonomyForm.getTaxonomyId = function () {
        collection = $(this.formId).getInputs('hidden', 'taxonomy[id]');
        if (collection.size() > 0) {
            return collection.first().value;
        }
        return false;
    };
    taxonomyForm.setTaxonomyPath = function (path) {
        collection = $(this.formId).getInputs('hidden', 'taxonomy[path]');
        if (collection.size() > 0) {
            return collection.first().value = path;
        }
    };
    function taxonomySubmit(url, useAjax) {
        var activeTab = $('active_tab_id');
        if (activeTab) {
            if (activeTab.tabsJsObject && activeTab.tabsJsObject.activeTab) {
                activeTab.value = activeTab.tabsJsObject.activeTab.id;
            }
        }
        var params = {};
        var fields = $('taxonomy_edit_form').getElementsBySelector('input', 'select');
        for (var i = 0; i < fields.length; i++) {
            if (!fields[i].name) {
                continue;
            }
            params[fields[i].name] = fields[i].getValue();
        }
        var taxonomyId = params['taxonomy[id]'] ? params['taxonomy[id]'] : 0;
        var isCreating = taxonomyId == 0;
        var path = params['taxonomy[path]'].split('/');
        var parentId = path.pop();
        if (parentId == taxonomyId) {
            parentId = path.pop();
        }
        if (isCreating) {
            if (!tree.currentNodeId) {
                tree.currentNodeId = parentId;
            }
            tree.addNodeTo = parentId;
        } else {
            var currentNode = tree.getNodeById(taxonomyId);
            var oldClass = 'active-category';
            var newClass = 'active-category';
            if (currentNode) {
                if (parseInt(params['taxonomy[status]'])) {
                    var oldClass = 'no-active-category';
                    var newClass = 'active-category';
                } else {
                    var oldClass = 'active-category';
                    var newClass = 'no-active-category';
                }
                Element.removeClassName(currentNode.ui.wrap.firstChild, oldClass);
                Element.addClassName(currentNode.ui.wrap.firstChild, newClass);
            }
        }
        taxonomyForm.submit();
    }
<?php if (($block = $this->getLayout()->getBlock('taxonomy.blogset.grid')) && ($_gridJsObject = $block->getJsObjectName())): ?>
        var taxonomyBlogsets = $H(<?php echo $this->getBlogsetsJson() ?>);
        $('in_taxonomy_blogsets').value = taxonomyBlogsets.toQueryString();
        function registerTaxonomyBlogset(grid, element, checked) {
            if (checked) {
                if (element.positionElement) {
                    element.positionElement.disabled = false;
                    taxonomyBlogsets.set(element.value, element.positionElement.value);
                }
            } else {
                if (element.positionElement) {
                    element.positionElement.disabled = true;
                }
                taxonomyBlogsets.unset(element.value);
            }
            $('in_taxonomy_blogsets').value = taxonomyBlogsets.toQueryString();
            grid.reloadParams = {'selected_blogsets[]': taxonomyBlogsets.keys()
            };
        }
        function taxonomyBlogsetRowClick(grid, event) {
            var trElement = Event.findElement(event, 'tr');
            var isInput = Event.element(event).tagName == 'INPUT';
            if (trElement) {
                var checkbox = Element.getElementsBySelector(trElement, 'input');
                if (checkbox[0]) {
                    var checked = isInput ? checkbox[0].checked : !checkbox[0].checked;
    <?php echo $_gridJsObject ?>.setCheckboxChecked(checkbox[0], checked);
                }
            }
        }
        function positionBlogsetChange(event) {
            var element = Event.element(event);
            if (element && element.checkboxElement && element.checkboxElement.checked) {
                taxonomyBlogsets.set(element.checkboxElement.value, element.value);
                $('in_taxonomy_blogsets').value = taxonomyBlogsets.toQueryString();
            }
        }
        var tabIndex = 1000;
        function taxonomyBlogsetRowInit(grid, row) {
            var checkbox = $(row).getElementsByClassName('checkbox')[0];
            var position = $(row).getElementsByClassName('input-text')[0];
            if (checkbox && position) {
                checkbox.positionElement = position;
                position.checkboxElement = checkbox;
                position.disabled = !checkbox.checked;
                position.tabIndex = tabIndex++;
                Event.observe(position, 'keyup', positionBlogsetChange);
            }
        }
    <?php echo $_gridJsObject ?>.rowClickCallback = taxonomyBlogsetRowClick;
    <?php echo $_gridJsObject ?>.initRowCallback = taxonomyBlogsetRowInit;
    <?php echo $_gridJsObject ?>.checkboxCheckCallback = registerTaxonomyBlogset;
    <?php echo $_gridJsObject ?>.rows.each(function (row) {
            taxonomyBlogsetRowInit(<?php echo $_gridJsObject ?>, row)
        });
<?php endif; ?>
<?php if ($this->isAjax() && ($block = $this->getLayout()->getBlock('tabs')) && ($_tabsJsObject = $block->getJsObjectName())): ?>
    <?php echo $_tabsJsObject ?>.moveTabContentInDest();
        if (<?php echo $_tabsJsObject ?>.activeTab) {
            $('active_tab_id').value = <?php echo $_tabsJsObject ?>.activeTab.id;
        }
        $('active_tab_id').tabsJsObject = <?php echo $_tabsJsObject ?>;
<?php endif; ?>
//]]>
</script>
